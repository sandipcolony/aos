a.
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

int main() 
{
    int pipefd[2];
    pid_t child_pid;

    if (pipe(pipefd) == -1) 
    {
        perror("Error creating pipe");
        return 1;
    }


    child_pid = fork();

    if (child_pid == -1) 
    {
        perror("Error forking");
        return 1;
    }

    if (child_pid == 0) 
    {
        close(pipefd[1]);

        char buffer[256];
        int bytes_read;

        while ((bytes_read = read(pipefd[0], buffer, sizeof(buffer))) > 0) 
        {
            buffer[bytes_read] = '\0';
            printf("Child received: %s", buffer);
        }

        close(pipefd[0]);
    } 
    else 
    {
        close(pipefd[0]);

      
        const char *message = "Hello, child!\n";
        write(pipefd[1], message, strlen(message));

     
        close(pipefd[1]);
    }

    return 0;
}
